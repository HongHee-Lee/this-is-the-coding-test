일반적으로 가장 큰 데이터와 가장 작은 데이터의 차이가 1,000,000을 넘지 않을 때 효과적으로 사용할 수 있다.
계수 정렬은 앞서 다루었던 3가지 정렬 알고리즘처럼 직접 데이터의 값을 비교한 뒤에 위치를 변경하며 정렬하는 방식(비교 기반의 정렬 알고리즘)이 아니다.
*선택 정렬, 삽입 정렬, 퀵 정렬처럼 데이터를 비교하며 위치를 변경하는 정렬 방법을 비교 기반의 정렬 알고리즘이라고도 부른다.

1.별도의 리스트 선언

2.7 5 9 0 3 1 6 2 9 1 4 8 0 5 2

3.
0 1 2 3 4 5 6 7 8 9
              1
0 1 2 3 4 5 6 7 8 9
          1   1
0 1 2 3 4 5 6 7 8 9
          1   1   1
      반복
0 1 2 3 4 5 6 7 8 9
2 2 2 1 1 2 1 1 1 2
->리스트에는 각 데이터가 몇 번 등장했는지 그 횟수가 기록된다. 5 인덱스 값이 2 이므로 '5'는 2번 등장한 것이다.
정렬 결과의 확인은 리스트의 첫 번째 데이터부터 하나씩 그 값만큼 인덱스를 출력하면 된다.
0 0 1 1 2 2 3 4 5 5 6 7 8 9 9

<이것이 취업을 위한 코딩테스트다>, 나동빈, 172p

#----------------------------------------------------------------------------------------------------------

#거의 순수 내코드(그러나 동빈님 코드와 거의 일치)

array=list(map(int, input('초기 정렬의 정보를 입력해주세요. : ').split()))
li=[0]*(max(array)+1)

for i in array:
    li[i]+=1
    
for i in range(len(li)):
    for j in range(li[i]): #동빈님 코드에서 살짝 힌트 얻어온 부분
        print(i,end=' ') 

"""
input
7 5 9 0 3 1 6 2 9 1 4 8 0 5 2
output
0 0 1 1 2 2 3 4 5 5 6 7 8 9 9 
"""
