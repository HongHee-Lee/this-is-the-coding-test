#이진탐색 알고리즘을 활용한 내 풀이

8 3 7 9 2
5 7 9

def binary_search(array, target, start, end):
    while start<=end:
        mid=(start+end)//2
        if array[mid]==target:
            return 'yes'
        elif array[mid]>target:
            end=mid-1
        else:
            start=mid+1
    return 'no'
    
#입력받기
N=int(input('가게 안의 총부품 개수를 입력해주세요 : '))
array=list(map(int, input('가게 안에 총부품들을 입력해주세요 : ').split()))
array.sort()

M=int(input('손님이 확인요청한 총 부품 개수를 입력해주세요 : '))
customerask=list(map(int, input('손님이 확인요청한 부품들을 입력해주세요 : ').split()))

#부품을 순서대로 확인해 있으면 yes, 없으면 no를 출력하기 
for i in range(M):
    target=customerask[i]    
    print(binary_search(array,target,0,N-1),end=' ')

#--------------------------------------------------------------------------------------

#이진탐색 함수는 조금의 변형도 없이 그대로 두고 아래 부분들 에서 이진탐색 함수를 그대로 활용하는 동빈님 코드

#동빈님 풀이

def binary_search(array, target, start, end):
    while start<=end:
        mid=(start+end)//2
        if array[mid]==target:
            return mid
        elif array[mid]>target:
            end=mid-1
        else:
            start=mid+1
    return None
    
#입력받기
n=int(input('가게 안의 총부품 개수를 입력해주세요 : '))
array=list(map(int, input('가게 안에 총부품들을 입력해주세요 : ').split()))
array.sort()

#---------------------------------------------------------------------------------------

#계수 정렬을 이용한 풀이.
#N(가게의 부품 개수)을 입력받기
n=int(input('가세의 부품 개수를 입력해 주세요. : '))
array=[0]*100

#가게에 있는 전체 부품 번호를 입력받아서 기록
for i in input('가게의 전체 부품을 입력해주세요. :').split():
    array[int(i)]=1
print(array) #[0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

# M(손님이 확인 요청한 부품 개수)을 입력받기
m=int(input('손님이 확인 요청한 부품 개수를 입력해주세요. :'))
# 손님이 확인 요청한 전체 부품 번호를 공백으로 구분하여 입력
x=list(map(int, input('손님이 확인 요청한 전체 부품 번호를 공백으로 구분해 입력해주세요. :').split()))

#손님이 확인 요청한 부품 번호를 하나씩 확인 하기.
for i in x:
    #해당 부품이 존재하는지 확인
    if array[i]==1:
        print('yes', end=' ')
    else:
        print('no', end=' ')

m=int(input('손님이 확인요청한 총 부품 개수를 입력해주세요 : '))
customerask=list(map(int, input('손님이 확인요청한 부품들을 입력해주세요 : ').split()))

for i in customerask:
    result=binary_search(array,i,0,n-1) #동빈님은 target 대신 바로 i 대입해주심 : 이게 센스
    if result!=None:
        print('yes',end=' ')
    else:
        print('no',end=' ')
        
#--------------------------------------------------------------------------------------

#집합 자료형 이용

#손님이 확인 요청한 부품 번호를 하나씩 확인 하기.
for i in x:
    #해당 부품이 존재하는지 확인
    if array[i]==1:
        print('yes', end=' ')
    else:
        print('no', end=' ')
        
#집합 자료형 이용(소스코드의 간결성 측면에선 가장 우수함.)
n=int(input('가게의 부품 개수를 입력해주세요. :'))
array=set(map(int, input('가체의 전체 부품 개수를 입력해주세요. :').split()))   #집합(set)자료형에 기록 / list에서 set으로 바뀜
#print(array) #{2, 3, 7, 8, 9}

m=int(input('손님이 확인 요청한 부품 개수를 입력해주세요. : '))
x=list(map(int, input('손님이 확인 요청한 부품을 입력해주세요. :').split()))

#손님이 확인 요청한 부품 번호를 하나씩 확인
for i in x:
    #해당 부품이 존재하는지 확인
    if i in array:
        print('yes', end=' ')
    else:
        print('no', end=' ')
        
type(array) #set

#------------------------------------------------------------------------------

#내가 임의로 살짝 개조한 집합 자료형 버전.
#집합 자료형 이용(소스코드의 간결성 측면에선 가장 우수함.)
n=int(input('가게의 부품 개수를 입력해주세요. :'))
array=list(map(int, input('가체의 전체 부품 개수를 입력해주세요. :').split()))   #동빈님은 집합(set)자료형으로 했지만, 나는 의문을 가지고 list로는 안될까 라는 의문을 가졌음.
array.sort()                                                                    #sort() 함수를 이용하여 집합 자료형을 사용한 것과 같은 결과를 낼 수 있었다.

m=int(input('손님이 확인 요청한 부품 개수를 입력해주세요. : '))
x=list(map(int, input('손님이 확인 요청한 부품을 입력해주세요. :').split()))

#손님이 확인 요청한 부품 번호를 하나씩 확인
for i in x:
    #해당 부품이 존재하는지 확인
    if i in array:
        print('yes', end=' ')
    else:
        print('no', end=' ')
